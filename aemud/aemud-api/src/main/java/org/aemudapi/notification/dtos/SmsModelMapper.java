package org.aemudapi.notification.dtos;

import org.aemudapi.notification.entity.SmsModel;
import org.springframework.stereotype.Component;

@Component
public class SmsModelMapper {

    public SmsModelDTO toDto(SmsModel smsModel) {
        if (smsModel == null) {
            return null;
        }
        SmsModelDTO dto = new SmsModelDTO();
        dto.setId(smsModel.getId());
        dto.setModelName(smsModel.getModelName());
        dto.setSmsModel(smsModel.getSmsModel());
        return dto;
    }

    public SmsModel toEntity(SmsModelDTO smsModelDTO) {
        if (smsModelDTO == null) {
            return null;
        }
        SmsModel entity = new SmsModel();
        entity.setId(smsModelDTO.getId());
        entity.setModelName(smsModelDTO.getModelName());
        entity.setSmsModel(smsModelDTO.getSmsModel());
        return entity;
    }

    public void updateEntityFromDto(SmsModelDTO smsModelDTO, SmsModel smsModel) {
        if (smsModelDTO == null || smsModel == null) {
            return;
        }
        smsModel.setModelName(smsModelDTO.getModelName());
        smsModel.setSmsModel(smsModelDTO.getSmsModel());
        // Note: Typically, you wouldn't update the ID from a DTO in an existing entity.
        // If IDs are generated by the database, leave this line out or handle it carefully.
        // smsModel.setId(smsModelDTO.getId());
    }
}